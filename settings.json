{
    "peacock.favoriteColors": [
        {
            "name": "Angular Red",
            "value": "#b52e31"
        },
        {
            "name": "Auth0 Orange",
            "value": "#eb5424"
        },
        {
            "name": "Azure Blue",
            "value": "#007fff"
        },
        {
            "name": "C# Purple",
            "value": "#68217A"
        },
        {
            "name": "Gatsby Purple",
            "value": "#639"
        },
        {
            "name": "Go Cyan",
            "value": "#5dc9e2"
        },
        {
            "name": "Java Blue-Gray",
            "value": "#557c9b"
        },
        {
            "name": "JavaScript Yellow",
            "value": "#f9e64f"
        },
        {
            "name": "Mandalorian Blue",
            "value": "#1857a4"
        },
        {
            "name": "Node Green",
            "value": "#215732"
        },
        {
            "name": "React Blue",
            "value": "#00b3e6"
        },
        {
            "name": "Something Different",
            "value": "#832561"
        },
        {
            "name": "Vue Green",
            "value": "#42b883"
        }
    ],
    "terminal.integrated.mouseWheelScrollSensitivity": 0,
    "editor.fontFamily": "Input",
    "editor.fontSize": 16,
    "terminal.integrated.fontFamily": "Hack",
    "terminal.integrated.fontSize": 16,
    "explorer.confirmDelete": false,
    "vim.easymotion": true,
    "vim.useSystemClipboard": true,
    "vim.normalModeKeyBindingsNonRecursive": [
        {
            "before": [
                " "
            ],
            "commands": [
                "vspacecode.space"
            ],
            "recursive": false
        },
        {
            "before": [
                " "
            ],
            "commands": [
                "vspacecode.space"
            ],
            "recursive": false
        },
        {
            "before": [
                ","
            ],
            "commands": [
                {
                    "command": "whichkey.show",
                    "args": [
                        {
                            "key": "m",
                            "name": "make...",
                            "type": "bindings",
                            "bindings": [
                                {
                                    "key": "c",
                                    "name": "clean drake target at cursor",
                                    "type": "command",
                                    "command": "r.runCommandWithSelectionOrWord",
                                    "args": "drake::clean($$)"
                                },
                                {
                                    "key": "m",
                                    "name": "Run drake::r_make()",
                                    "type": "command",
                                    "command": "r.runCommand",
                                    "args": "drake::r_make()"
                                },
                                {
                                    "key": "p",
                                    "name": "source .packages.R",
                                    "type": "command",
                                    "command": "r.runCommand",
                                    "args": "source('./packages.R')"
                                },
                                {
                                    "key": "r",
                                    "name": "loadd drake targert at cursor",
                                    "type": "command",
                                    "command": "r.runCommandWithSelectionOrWord",
                                    "args": "drake::loadd($$)"
                                }
                            ]
                        },
                        {
                            "key": "h",
                            "name": "help...",
                            "type": "bindings",
                            "bindings": [
                                {
                                    "key": "o",
                                    "name": "help on object at cursor",
                                    "type": "command",
                                    "command": "r.runCommandWithSelectionOrWord",
                                    "args": "help($$)"
                                }
                            ]
                        },
                        {
                            "key": "o",
                            "name": "output object",
                            "type": "command",
                            "command": "r.runCommandWithSelectionOrWord",
                            "args": "$$"
                        },
                        {
                            "key": "t",
                            "name": "thead object",
                            "type": "command",
                            "command": "r.runCommandWithSelectionOrWord",
                            "args": "t(head($$))"
                        },
                        {
                            "key": "l",
                            "name": "clip last value",
                            "type": "command",
                            "command": "r.runCommand",
                            "args": "clipr::write_last_clip()"
                        },
                        {
                            "key": "c",
                            "name": "code...",
                            "type": "bindings",
                            "bindings": [
                                {
                                    "key": "s",
                                    "name": "style code file",
                                    "type": "command",
                                    "command": "editor.action.formatDocument"
                                }
                            ]
                        },
                        {
                            "key": "d",
                            "name": "devtools...",
                            "type": "bindings",
                            "bindings": [
                                {
                                    "key": "l",
                                    "name": "load all",
                                    "type": "command",
                                    "command": "r.runCommand",
                                    "args": "devtools::load_all()"
                                },
                                {
                                    "key": "d",
                                    "name": "document",
                                    "type": "command",
                                    "command": "r.runCommand",
                                    "args": "devtools::document()"
                                },
                                {
                                    "key": "c",
                                    "name": "check",
                                    "type": "command",
                                    "command": "r.runCommand",
                                    "args": "devtools::check()"
                                },
                                {
                                    "key": "i",
                                    "name": "install",
                                    "type": "command",
                                    "command": "r.runCommand",
                                    "args": "devtools::install()"
                                }
                            ]
                        },
                        {
                            "key": "r",
                            "name": "rmarkdown...",
                            "type": "bindings",
                            "bindings": [
                                {
                                    "key": "r",
                                    "name": "render document",
                                    "type": "command",
                                    "command": "r.runCommandWithEditorPath",
                                    "args": "rmarkdown::render(\"$$\", output_format = 'all')"
                                },
{
                                    "key": "v",
                                    "name": "view document",
                                    "type": "command",
                                    "command": "r.runCommandWithEditorPath",
                                    "args": ".vsc.viewer(gsub('.rmd', '.html', '$$', ignore.case = TRUE))"
                                }
                            ]
                        }
                    ]
                }
            ],
            "recursive": false
        },
        {
            "before": [
                " "
            ],
            "commands": [
                "vspacecode.space"
            ],
            "recursive": false
        },
        {
            "before": [
                " "
            ],
            "commands": [
                "vspacecode.space"
            ],
            "recursive": false
        },
        {
            "before": [
                "<space>"
            ],
            "commands": [
                "vspacecode.space"
            ]
        }
    ],
    "vim.visualModeKeyBindingsNonRecursive": [
        {
            "before": [
                " "
            ],
            "commands": [
                "vspacecode.space"
            ],
            "recursive": false
        },
        {
            "before": [
                " "
            ],
            "commands": [
                "vspacecode.space"
            ],
            "recursive": false
        },
        {
            "before": [
                " "
            ],
            "commands": [
                "vspacecode.space"
            ],
            "recursive": false
        },
        {
            "before": [
                " "
            ],
            "commands": [
                "vspacecode.space"
            ],
            "recursive": false
        },
        {
            "before": [
                "<space>"
            ],
            "commands": [
                "vspacecode.space"
            ]
        }
    ],
    "vspacecode.bindingOverrides": [
        {
            "keys": "j.g",
            "name": "Jump go",
            "type": "command",
            "command": "workbench.action.showAllSymbols",
        }
    ],
    "r.rterm.windows": "C:\\Users\\msmcbain\\AppData\\Local\\Programs\\Python\\Python38\\Scripts\\radian.exe",
    "r.bracketedPaste": true,
    "r.sessionWatcher": true,
    "workbench.colorTheme": "Dracula",
    "workbench.panel.defaultLocation": "right",
    "terminal.integrated.shell.windows": "C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\powershell.exe",
    "r.lsp.debug": true,
    "cSpell.enabledLanguageIds": [
        "asciidoc",
        "c",
        "cpp",
        "csharp",
        "css",
        "git-commit",
        "go",
        "handlebars",
        "haskell",
        "html",
        "jade",
        "java",
        "javascript",
        "javascriptreact",
        "json",
        "jsonc",
        "latex",
        "less",
        "markdown",
        "php",
        "plaintext",
        "python",
        "pug",
        "restructuredtext",
        "rust",
        "scala",
        "scss",
        "text",
        "typescript",
        "typescriptreact",
        "yaml",
        "yml",
        "r",
        "rmd"
    ],
    "r.lsp.path": "C:\\R\\R-4.0.2\\bin\\x64\\R.exe",
    "window.zoomLevel": 1,
    "editor.lineHeight": 20
}