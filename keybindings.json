// Place your key bindings in this file to override the defaults
[
	{
		"key": "tab",
		"command": "extension.vim_tab",
		"when": "editorFocus && vim.active && !inDebugRepl && vim.mode != 'Insert' && editorLangId != 'magit'"
	},
	{
		"key": "tab",
		"command": "-extension.vim_tab",
		"when": "editorFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
	},
	{
		"key": "x",
		"command": "magit.discard-at-point",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "k",
		"command": "-magit.discard-at-point"
	},
	{
		"key": "-",
		"command": "magit.reverse-at-point",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "v",
		"command": "-magit.reverse-at-point"
	},
	{
		"key": "shift+-",
		"command": "magit.reverting",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "shift+v",
		"command": "-magit.reverting"
	},
	{
		"key": "shift+o",
		"command": "magit.resetting",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "shift+x",
		"command": "-magit.resetting"
	},
	{
		"key": "x",
		"command": "-magit.reset-mixed"
	},
	{
		"key": "ctrl+u x",
		"command": "-magit.reset-hard"
	},
	{
		"key": "y",
		"command": "-magit.show-refs"
	},
	{
		"key": "y",
		"command": "vspacecode.showMagitRefMenu",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode == 'Normal'"
	},
	{
		"key": "ctrl+j",
		"command": "workbench.action.quickOpenSelectNext",
		"when": "inQuickOpen"
	},
	{
		"key": "ctrl+k",
		"command": "workbench.action.quickOpenSelectPrevious",
		"when": "inQuickOpen"
	},
	{
		"key": "ctrl+j",
		"command": "selectNextSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+k",
		"command": "selectPrevSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+j",
		"command": "showNextParameterHint",
		"when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
	},
	{
		"key": "ctrl+k",
		"command": "showPrevParameterHint",
		"when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
	},
	{
		"key": "ctrl+h",
		"command": "file-browser.stepOut",
		"when": "inFileBrowser"
	},
	{
		"key": "ctrl+l",
		"command": "file-browser.stepIn",
		"when": "inFileBrowser"
	},
	{
		"key": "ctrl+'",
		"command": "editor.action.insertSnippet",
		"when": "editorTextFocus",
		"args": {
			"snippet": "<-$0" 
		}
	},
	{
		"key": "ctrl+alt+shift+'",
		"command": "editor.action.insertSnippet",
		"when": "editorTextFocus", 
		"args": {
			"snippet": "%>%$0"
		}
	},
	{
		"key": "ctrl+shift+'",
		"command": "editor.action.insertSnippet",
		"when": "editorTextFocus", 
		"args": {
			"snippet": "|>$0"
		}
	},
	{
		"key": "ctrl+'",
		"command": "workbench.action.terminal.sendSequence",
		"when": "terminalFocus",
		"args": {
			"text": "<-" 
		}
	},
	{
		"key": "ctrl+alt+shift+'",
		"command": "workbench.action.terminal.sendSequence",
		"when": "terminalFocus", 
		"args": {
			"text": "%>%"
		}
	},
	{
		"key": "ctrl+shift+'",
		"command": "workbench.action.terminal.sendSequence",
		"when": "terminalFocus", 
		"args": {
			"text": "|>"
		}
	},
	{
		"key": "ctrl+k ctrl+left",
		"command": "-workbench.action.focusLeftGroup"
	},
	{
		"key": "ctrl+; c",
		"command": "-python.datascience.changeCellToCode",
		"when": "editorTextFocus && python.datascience.featureenabled && python.datascience.hascodecells && !notebookEditorFocused"
	},
	{
		"key": "ctrl+; m",
		"command": "-python.datascience.changeCellToMarkdown",
		"when": "editorTextFocus && python.datascience.featureenabled && python.datascience.hascodecells && !notebookEditorFocused"
	},
	{
		"key": "ctrl+; x",
		"command": "-python.datascience.deleteCells",
		"when": "editorTextFocus && python.datascience.featureenabled && python.datascience.hascodecells && !notebookEditorFocused"
	},
	{
		"key": "ctrl+; a",
		"command": "-python.datascience.insertCellAbove",
		"when": "editorTextFocus && python.datascience.featureenabled && python.datascience.hascodecells && !notebookEditorFocused"
	},
	{
		"key": "ctrl+; b",
		"command": "-python.datascience.insertCellBelow",
		"when": "editorTextFocus && python.datascience.featureenabled && python.datascience.hascodecells && !notebookEditorFocused"
	},
	{
		"key": "ctrl+; s",
		"command": "-python.datascience.insertCellBelowPosition",
		"when": "editorTextFocus && python.datascience.featureenabled && python.datascience.hascodecells && !notebookEditorFocused"
	},
	{
		"key": "ctrl+; d",
		"command": "-python.datascience.moveCellsDown",
		"when": "editorTextFocus && python.datascience.featureenabled && python.datascience.hascodecells && !notebookEditorFocused"
	},
	{
		"key": "ctrl+; u",
		"command": "-python.datascience.moveCellsUp",
		"when": "editorTextFocus && python.datascience.featureenabled && python.datascience.hascodecells && !notebookEditorFocused"
	},
	{
		"key": "ctrl+shift+;",
		"command": "-breadcrumbs.focus",
		"when": "breadcrumbsPossible"
	},
	{
		"key": "ctrl+j",
		"command": "-workbench.action.togglePanel"
	},
	{
		"key": "ctrl+l",
		"command": "acceptSelectedSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "space",
		"command": "vspacecode.space",
		"when": "activeEditorGroupEmpty && focusedView == '' && !whichkeyActive && !inQuickOpen"
	},
	{
		"key": "space",
		"command": "vspacecode.space",
		"when": "activeEditorGroupEmpty && focusedView == '' && !whichkeyActive && !inputFocus"
	},
	{
		"key": "ctrl+k r",
		"command": "-workbench.action.files.revealActiveFileInWindows"
	},
	{
		"key": "ctrl+k ctrl+o",
		"command": "-workbench.action.files.openLocalFolder",
		"when": "remoteFileDialogVisible"
	},
	{
		"key": "ctrl+k p",
		"command": "-workbench.action.files.copyPathOfActiveFile"
	},
	{
		"key": "ctrl+k up",
		"command": "-views.moveViewUp",
		"when": "focusedView != ''"
	},
	{
		"key": "ctrl+k right",
		"command": "-views.moveViewRight",
		"when": "focusedView != ''"
	},
	{
		"key": "ctrl+k left",
		"command": "-views.moveViewLeft",
		"when": "focusedView != ''"
	},
	{
		"key": "ctrl+k down",
		"command": "-views.moveViewDown",
		"when": "focusedView != ''"
	},
	{
		"key": "ctrl+k f2",
		"command": "-togglePeekWidgetFocus",
		"when": "inReferenceSearchEditor || referenceSearchVisible"
	},
	{
		"key": "ctrl+c ctrl+k",
		"command": "-magit.clear-and-abort-editor",
		"when": "editorTextFocus && editorLangId == 'git-rebase'"
	},
	{
		"key": "ctrl+c ctrl+k",
		"command": "-magit.clear-and-abort-editor",
		"when": "editorTextFocus && editorLangId == 'git-commit'"
	},
	{
		"key": "ctrl+k ctrl+e",
		"command": "-keybindings.editor.defineWhenExpression",
		"when": "inKeybindings && keybindingFocus"
	},
	{
		"key": "ctrl+k ctrl+k",
		"command": "-keybindings.editor.defineKeybinding",
		"when": "inKeybindings && keybindingFocus"
	},
	{
		"key": "ctrl+k ctrl+k",
		"command": "-editor.action.defineKeybinding",
		"when": "editorTextFocus && !editorReadonly && editorLangId == 'jsonc'"
	},
	{
		"key": "ctrl+k f",
		"command": "-workbench.action.closeFolder",
		"when": "emptyWorkspaceSupport"
	},
	{
		"key": "ctrl+k shift+enter",
		"command": "-workbench.action.unpinEditor",
		"when": "activeEditorIsPinned"
	},
	{
		"key": "ctrl+k z",
		"command": "-workbench.action.toggleZenMode"
	},
	{
		"key": "ctrl+k ctrl+\\",
		"command": "-workbench.action.splitEditorOrthogonal"
	},
	{
		"key": "ctrl+k ctrl+p",
		"command": "-workbench.action.showAllEditors"
	},
	{
		"key": "ctrl+k shift+enter",
		"command": "-workbench.action.pinEditor",
		"when": "!activeEditorIsPinned"
	},
	{
		"key": "ctrl+k ctrl+pageup",
		"command": "-workbench.action.previousEditorInGroup"
	},
	{
		"key": "ctrl+k ctrl+pagedown",
		"command": "-workbench.action.nextEditorInGroup"
	},
	{
		"key": "ctrl+k up",
		"command": "-workbench.action.moveActiveEditorGroupUp"
	},
	{
		"key": "ctrl+k right",
		"command": "-workbench.action.moveActiveEditorGroupRight"
	},
	{
		"key": "ctrl+k left",
		"command": "-workbench.action.moveActiveEditorGroupLeft"
	},
	{
		"key": "ctrl+k down",
		"command": "-workbench.action.moveActiveEditorGroupDown"
	},
	{
		"key": "ctrl+k enter",
		"command": "-workbench.action.keepEditor"
	},
	{
		"key": "ctrl+k ctrl+right",
		"command": "-workbench.action.focusRightGroup"
	},
	{
		"key": "ctrl+k ctrl+down",
		"command": "-workbench.action.focusBelowGroup"
	},
	{
		"key": "ctrl+k ctrl+up",
		"command": "-workbench.action.focusAboveGroup"
	},
	{
		"key": "ctrl+k u",
		"command": "-workbench.action.closeUnmodifiedEditors"
	},
	{
		"key": "ctrl+k w",
		"command": "-workbench.action.closeEditorsInGroup"
	},
	{
		"key": "ctrl+k ctrl+w",
		"command": "-workbench.action.closeAllEditors"
	},
	{
		"key": "ctrl+k ctrl+shift+w",
		"command": "-workbench.action.closeAllGroups"
	},
	{
		"key": "ctrl+k ctrl+]",
		"command": "-editor.unfoldRecursively",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+9",
		"command": "-editor.unfoldAllMarkerRegions",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+j",
		"command": "-editor.unfoldAll",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+x",
		"command": "-editor.action.trimTrailingWhitespace",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+k",
		"command": "-extension.vim_ctrl+k",
		"when": "editorTextFocus && vim.active && vim.use<C-k> && !inDebugRepl"
	},
	{
		"key": "ctrl+k ctrl+l",
		"command": "-editor.toggleFold",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+i",
		"command": "-editor.action.showHover",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+k ctrl+b",
		"command": "-editor.action.setSelectionAnchor",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+k ctrl+k",
		"command": "-editor.action.selectFromAnchorToCursor",
		"when": "editorTextFocus && selectionAnchorSet"
	},
	{
		"key": "ctrl+k ctrl+u",
		"command": "-editor.action.removeCommentLine",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+k ctrl+s",
		"command": "-workbench.action.openGlobalKeybindings"
	},
	{
		"key": "ctrl+k ctrl+m",
		"command": "-workbench.extensions.action.showRecommendedKeymapExtensions"
	},
	{
		"key": "ctrl+k ctrl+t",
		"command": "-workbench.action.selectTheme"
	},
	{
		"key": "ctrl+k f12",
		"command": "-editor.action.revealDefinitionAside",
		"when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
	},
	{
		"key": "ctrl+k ctrl+shift+\\",
		"command": "-notebook.cell.split",
		"when": "notebookCellEditable && notebookCellEditorFocused && notebookEditable && notebookEditorFocused"
	},
	{
		"key": "ctrl+k t",
		"command": "-notebook.cell.expandCellOutput",
		"when": "notebookCellListFocused && notebookCellOutputIsCollapsed"
	},
	{
		"key": "ctrl+k ctrl+c",
		"command": "-notebook.cell.expandCellContent",
		"when": "notebookCellInputIsCollapsed && notebookCellListFocused"
	},
	{
		"key": "ctrl+k t",
		"command": "-notebook.cell.collapseCellOutput",
		"when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed"
	},
	{
		"key": "ctrl+k ctrl+c",
		"command": "-notebook.cell.collapseCellContent",
		"when": "notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed"
	},
	{
		"key": "ctrl+k ctrl+d",
		"command": "-editor.action.moveSelectionToNextFindMatch",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+k v",
		"command": "-markdown.showPreviewToSide",
		"when": "!notebookEditorFocused && editorLangId == 'markdown'"
	},
	{
		"key": "ctrl+k ctrl+r",
		"command": "-workbench.action.keybindingsReference"
	},
	{
		"key": "ctrl+k ctrl+q",
		"command": "-workbench.action.navigateToLastEditLocation"
	},
	{
		"key": "ctrl+k ctrl+n",
		"command": "-git.unstageSelectedRanges",
		"when": "isInDiffEditor"
	},
	{
		"key": "ctrl+k ctrl+alt+s",
		"command": "-git.stageSelectedRanges",
		"when": "isInDiffEditor"
	},
	{
		"key": "ctrl+k ctrl+r",
		"command": "-git.revertSelectedRanges",
		"when": "isInDiffEditor"
	},
	{
		"key": "ctrl+k ctrl+f",
		"command": "-editor.action.formatSelection",
		"when": "editorHasDocumentSelectionFormattingProvider && editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+k ctrl+[",
		"command": "-editor.foldRecursively",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+7",
		"command": "-editor.foldLevel7",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+6",
		"command": "-editor.foldLevel6",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+5",
		"command": "-editor.foldLevel5",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+4",
		"command": "-editor.foldLevel4",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+3",
		"command": "-editor.foldLevel3",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+2",
		"command": "-editor.foldLevel2",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+1",
		"command": "-editor.foldLevel1",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+8",
		"command": "-editor.foldAllMarkerRegions",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+/",
		"command": "-editor.foldAllBlockComments",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+0",
		"command": "-editor.foldAll",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+shift+s",
		"command": "-workbench.action.files.saveWithoutFormatting"
	},
	{
		"key": "ctrl+k s",
		"command": "-workbench.action.files.saveAll"
	},
	{
		"key": "ctrl+k ctrl+o",
		"command": "-workbench.action.files.openFolder"
	},
	{
		"key": "ctrl+k o",
		"command": "-workbench.action.files.showOpenedFileInNewWindow",
		"when": "emptyWorkspaceSupport"
	},
	{
		"key": "ctrl+k ctrl+shift+c",
		"command": "-copyRelativeFilePath",
		"when": "!editorFocus"
	},
	{
		"key": "ctrl+k d",
		"command": "-workbench.files.action.compareWithSaved"
	},
	{
		"key": "ctrl+k c",
		"command": "-workbench.files.action.compareWithClipboard"
	},
	{
		"key": "ctrl+k e",
		"command": "-workbench.files.action.focusOpenEditorsView",
		"when": "workbench.explorer.openEditorsView.active"
	},
	{
		"key": "ctrl+k m",
		"command": "-workbench.action.editor.changeLanguageMode"
	},
	{
		"key": "ctrl+k ctrl+c",
		"command": "-editor.action.addCommentLine",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+k ctrl+i",
		"command": "-editor.debug.action.showDebugHover",
		"when": "editorTextFocus && inDebugMode"
	},
	{
		"key": "shift+pageup",
		"command": "-workbench.action.terminal.scrollUpPage",
		"when": "terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+shift+k",
		"command": "workbench.action.terminal.scrollUp",
		"when": "terminalProcessSupported"
	},
	{
		"key": "ctrl+alt+pageup",
		"command": "-workbench.action.terminal.scrollUp",
		"when": "terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+shift+j",
		"command": "workbench.action.terminal.scrollDown",
		"when": "terminalProcessSupported"
	},
	{
		"key": "ctrl+alt+pagedown",
		"command": "-workbench.action.terminal.scrollDown",
		"when": "terminalFocus && terminalProcessSupported"
	},
	{
		"key": "shift+pagedown",
		"command": "-workbench.action.terminal.scrollDownPage",
		"when": "terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+shift+k",
		"command": "-editor.action.deleteLines",
		"when": "textInputFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+alt+j",
		"command": "workbench.action.terminal.scrollToBottom",
		"when": "terminalProcessSupported"
	},
	{
		"key": "ctrl+end",
		"command": "-workbench.action.terminal.scrollToBottom",
		"when": "terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+shift+tab",
		"command": "workbench.action.quickOpenLeastRecentlyUsedEditorInGroup",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+shift+tab",
		"command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup"
	},
	{
		"key": "ctrl+shift+`",
		"command": "-workbench.action.terminal.new",
		"when": "terminalProcessSupported"
	},
	{
		"key": "ctrl+shift+`",
		"command": "workbench.action.quickOpenTerm"
	},
	{
		"key": "ctrl+enter",
		"command": "r.runSelection",
		"when": "editorTextFocus && editorLangId == 'r'"
	},
	{
		"key": "cmd+enter",
		"command": "-r.runSelection",
		"when": "editorTextFocus && editorLangId == 'r'"
	},
	{
		"key": "ctrl+enter",
		"command": "r.runSelection",
		"when": "editorTextFocus && editorLangId == 'rmd'"
	},
	{
		"key": "cmd+enter",
		"command": "-r.runSelection",
		"when": "editorTextFocus && editorLangId == 'rmd'"
	},
	{
		"key": "cmd+2",
		"command": "workbench.action.openEditorAtIndex2"
	},
	{
		"key": "ctrl+2",
		"command": "-workbench.action.openEditorAtIndex2"
	},
	{
		"key": "cmd+1",
		"command": "workbench.action.openEditorAtIndex1"
	},
	{
		"key": "ctrl+1",
		"command": "-workbench.action.openEditorAtIndex1"
	},
	{
		"key": "cmd+3",
		"command": "workbench.action.openEditorAtIndex3"
	},
	{
		"key": "ctrl+3",
		"command": "-workbench.action.openEditorAtIndex3"
	},
	{
		"key": "cmd+4",
		"command": "workbench.action.openEditorAtIndex4"
	},
	{
		"key": "ctrl+4",
		"command": "-workbench.action.openEditorAtIndex4"
	},
	{
		"key": "cmd+5",
		"command": "workbench.action.openEditorAtIndex5"
	},
	{
		"key": "ctrl+5",
		"command": "-workbench.action.openEditorAtIndex5"
	},
	{
		"key": "cmd+6",
		"command": "workbench.action.openEditorAtIndex6"
	},
	{
		"key": "ctrl+6",
		"command": "-workbench.action.openEditorAtIndex6"
	},
	{
		"key": "cmd+7",
		"command": "workbench.action.openEditorAtIndex7"
	},
	{
		"key": "ctrl+7",
		"command": "-workbench.action.openEditorAtIndex7"
	},
	{
		"key": "cmd+8",
		"command": "workbench.action.openEditorAtIndex8"
	},
	{
		"key": "ctrl+8",
		"command": "-workbench.action.openEditorAtIndex8"
	},
	{
		"key": "cmd+9",
		"command": "workbench.action.openEditorAtIndex9"
	},
	{
		"key": "ctrl+9",
		"command": "-workbench.action.openEditorAtIndex9"
	},
	{
		"key": "ctrl+8",
		"command": "workbench.action.focusEighthEditorGroup"
	},
	{
		"key": "cmd+8",
		"command": "-workbench.action.focusEighthEditorGroup"
	},
	{
		"key": "ctrl+5",
		"command": "workbench.action.focusFifthEditorGroup"
	},
	{
		"key": "cmd+5",
		"command": "-workbench.action.focusFifthEditorGroup"
	},
	{
		"key": "ctrl+4",
		"command": "workbench.action.focusFourthEditorGroup"
	},
	{
		"key": "cmd+4",
		"command": "-workbench.action.focusFourthEditorGroup"
	},
	{
		"key": "ctrl+2",
		"command": "workbench.action.focusSecondEditorGroup"
	},
	{
		"key": "cmd+2",
		"command": "-workbench.action.focusSecondEditorGroup"
	},
	{
		"key": "ctrl+7",
		"command": "workbench.action.focusSeventhEditorGroup"
	},
	{
		"key": "cmd+7",
		"command": "-workbench.action.focusSeventhEditorGroup"
	},
	{
		"key": "ctrl+6",
		"command": "workbench.action.focusSixthEditorGroup"
	},
	{
		"key": "cmd+6",
		"command": "-workbench.action.focusSixthEditorGroup"
	},
	{
		"key": "ctrl+3",
		"command": "workbench.action.focusThirdEditorGroup"
	},
	{
		"key": "cmd+3",
		"command": "-workbench.action.focusThirdEditorGroup"
	},
	{
		"key": "ctrl+1",
		"command": "workbench.action.focusFirstEditorGroup"
	},
	{
		"key": "cmd+1",
		"command": "-workbench.action.focusFirstEditorGroup"
	}
]
